// Code generated by protoc-gen-go. DO NOT EDIT.
// source: page.proto

package book

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SearchRequest_Corpus int32

const (
	SearchRequest_UNIVERSAL SearchRequest_Corpus = 0
	SearchRequest_WEB       SearchRequest_Corpus = 1
	SearchRequest_IMAGES    SearchRequest_Corpus = 2
	SearchRequest_LOCAL     SearchRequest_Corpus = 3
	SearchRequest_NEWS      SearchRequest_Corpus = 4
	SearchRequest_PRODUCTS  SearchRequest_Corpus = 5
	SearchRequest_VIDEO     SearchRequest_Corpus = 6
	SearchRequest_PIC       SearchRequest_Corpus = 33
)

var SearchRequest_Corpus_name = map[int32]string{
	0:  "UNIVERSAL",
	1:  "WEB",
	2:  "IMAGES",
	3:  "LOCAL",
	4:  "NEWS",
	5:  "PRODUCTS",
	6:  "VIDEO",
	33: "PIC",
}

var SearchRequest_Corpus_value = map[string]int32{
	"UNIVERSAL": 0,
	"WEB":       1,
	"IMAGES":    2,
	"LOCAL":     3,
	"NEWS":      4,
	"PRODUCTS":  5,
	"VIDEO":     6,
	"PIC":       33,
}

func (x SearchRequest_Corpus) String() string {
	return proto.EnumName(SearchRequest_Corpus_name, int32(x))
}

func (SearchRequest_Corpus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f14a105a5ef2e917, []int{1, 0}
}

type OrderGoods struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserID               int64    `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	TradeNO              string   `protobuf:"bytes,3,opt,name=tradeNO,proto3" json:"tradeNO,omitempty"`
	OrderNO              string   `protobuf:"bytes,4,opt,name=orderNO,proto3" json:"orderNO,omitempty"`
	RefundAt             int64    `protobuf:"varint,6,opt,name=refundAt,proto3" json:"refundAt,omitempty"`
	ProjectID            int64    `protobuf:"varint,7,opt,name=projectID,proto3" json:"projectID,omitempty"`
	ProjectName          string   `protobuf:"bytes,8,opt,name=projectName,proto3" json:"projectName,omitempty"`
	ProjectState         string   `protobuf:"bytes,9,opt,name=projectState,proto3" json:"projectState,omitempty"`
	ProjectUUID          string   `protobuf:"bytes,10,opt,name=projectUUID,proto3" json:"projectUUID,omitempty"`
	ProjectType          int64    `protobuf:"varint,11,opt,name=projectType,proto3" json:"projectType,omitempty"`
	RefundState          int64    `protobuf:"varint,12,opt,name=refundState,proto3" json:"refundState,omitempty"`
	Entity               string   `protobuf:"bytes,13,opt,name=entity,proto3" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderGoods) Reset()         { *m = OrderGoods{} }
func (m *OrderGoods) String() string { return proto.CompactTextString(m) }
func (*OrderGoods) ProtoMessage()    {}
func (*OrderGoods) Descriptor() ([]byte, []int) {
	return fileDescriptor_f14a105a5ef2e917, []int{0}
}

func (m *OrderGoods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderGoods.Unmarshal(m, b)
}
func (m *OrderGoods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderGoods.Marshal(b, m, deterministic)
}
func (m *OrderGoods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderGoods.Merge(m, src)
}
func (m *OrderGoods) XXX_Size() int {
	return xxx_messageInfo_OrderGoods.Size(m)
}
func (m *OrderGoods) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderGoods.DiscardUnknown(m)
}

var xxx_messageInfo_OrderGoods proto.InternalMessageInfo

func (m *OrderGoods) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *OrderGoods) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *OrderGoods) GetTradeNO() string {
	if m != nil {
		return m.TradeNO
	}
	return ""
}

func (m *OrderGoods) GetOrderNO() string {
	if m != nil {
		return m.OrderNO
	}
	return ""
}

func (m *OrderGoods) GetRefundAt() int64 {
	if m != nil {
		return m.RefundAt
	}
	return 0
}

func (m *OrderGoods) GetProjectID() int64 {
	if m != nil {
		return m.ProjectID
	}
	return 0
}

func (m *OrderGoods) GetProjectName() string {
	if m != nil {
		return m.ProjectName
	}
	return ""
}

func (m *OrderGoods) GetProjectState() string {
	if m != nil {
		return m.ProjectState
	}
	return ""
}

func (m *OrderGoods) GetProjectUUID() string {
	if m != nil {
		return m.ProjectUUID
	}
	return ""
}

func (m *OrderGoods) GetProjectType() int64 {
	if m != nil {
		return m.ProjectType
	}
	return 0
}

func (m *OrderGoods) GetRefundState() int64 {
	if m != nil {
		return m.RefundState
	}
	return 0
}

func (m *OrderGoods) GetEntity() string {
	if m != nil {
		return m.Entity
	}
	return ""
}

type SearchRequest struct {
	Query                string                `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Name                 string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PageNumber           int32                 `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	ResultPerPage        int32                 `protobuf:"varint,4,opt,name=result_per_page,json=resultPerPage,proto3" json:"result_per_page,omitempty"`
	OrderGoods           map[int32]*OrderGoods `protobuf:"bytes,5,rep,name=orderGoods,proto3" json:"orderGoods,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f14a105a5ef2e917, []int{1}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchRequest) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *SearchRequest) GetResultPerPage() int32 {
	if m != nil {
		return m.ResultPerPage
	}
	return 0
}

func (m *SearchRequest) GetOrderGoods() map[int32]*OrderGoods {
	if m != nil {
		return m.OrderGoods
	}
	return nil
}

func init() {
	proto.RegisterEnum("book.SearchRequest_Corpus", SearchRequest_Corpus_name, SearchRequest_Corpus_value)
	proto.RegisterType((*OrderGoods)(nil), "book.OrderGoods")
	proto.RegisterType((*SearchRequest)(nil), "book.SearchRequest")
	proto.RegisterMapType((map[int32]*OrderGoods)(nil), "book.SearchRequest.OrderGoodsEntry")
}

func init() { proto.RegisterFile("page.proto", fileDescriptor_f14a105a5ef2e917) }

var fileDescriptor_f14a105a5ef2e917 = []byte{
	// 496 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x53, 0x5d, 0x6f, 0xda, 0x30,
	0x14, 0x1d, 0xf9, 0x6a, 0x72, 0x43, 0xc0, 0xba, 0x9a, 0x26, 0xab, 0x9a, 0x34, 0xc6, 0xa4, 0x8a,
	0x27, 0x1e, 0xba, 0x97, 0x69, 0x6f, 0x8c, 0x44, 0x55, 0x10, 0x4b, 0x90, 0x53, 0xda, 0x47, 0x14,
	0xc0, 0x2b, 0xac, 0x2d, 0x49, 0x8d, 0x33, 0x89, 0x7f, 0xb3, 0x5f, 0xb7, 0xdf, 0x31, 0xd9, 0x61,
	0x25, 0xec, 0xcd, 0xe7, 0x9c, 0xeb, 0x73, 0xbf, 0x6c, 0x80, 0x32, 0x7f, 0xe0, 0xc3, 0x52, 0x14,
	0xb2, 0x40, 0x6b, 0x59, 0x14, 0x8f, 0xfd, 0x3f, 0x06, 0x40, 0x2a, 0xd6, 0x5c, 0xdc, 0x14, 0xc5,
	0x7a, 0x8f, 0x1d, 0x30, 0xe2, 0x90, 0xb6, 0x7a, 0xad, 0x81, 0xc9, 0x8c, 0x38, 0xc4, 0x77, 0xe0,
	0x54, 0x7b, 0x2e, 0xe2, 0x90, 0x1a, 0x9a, 0x3b, 0x22, 0xa4, 0x70, 0x21, 0x45, 0xbe, 0xe6, 0x49,
	0x4a, 0xcd, 0x5e, 0x6b, 0xe0, 0xb1, 0x7f, 0x50, 0x29, 0x85, 0xf2, 0x4b, 0x52, 0x6a, 0xd5, 0xca,
	0x11, 0xe2, 0x25, 0xb8, 0x82, 0xff, 0xa8, 0x76, 0xeb, 0x91, 0xa4, 0x8e, 0x76, 0x7b, 0xc5, 0xf8,
	0x1e, 0xbc, 0x52, 0x14, 0x3f, 0xf9, 0x4a, 0xc6, 0x21, 0xbd, 0xd0, 0xe2, 0x89, 0xc0, 0x1e, 0xf8,
	0x47, 0x90, 0xe4, 0xcf, 0x9c, 0xba, 0xda, 0xb7, 0x49, 0x61, 0x1f, 0xda, 0x47, 0x98, 0xc9, 0x5c,
	0x72, 0xea, 0xe9, 0x90, 0x33, 0xae, 0xe1, 0x32, 0x9f, 0xc7, 0x21, 0x85, 0x33, 0x17, 0x45, 0x35,
	0x22, 0x6e, 0x0f, 0x25, 0xa7, 0xbe, 0xae, 0xa3, 0x49, 0xa9, 0x88, 0xba, 0xe6, 0x3a, 0x4d, 0xbb,
	0x8e, 0x68, 0x50, 0x6a, 0x62, 0x7c, 0x27, 0xb7, 0xf2, 0x40, 0x03, 0x9d, 0xe0, 0x88, 0xfa, 0xbf,
	0x4d, 0x08, 0x32, 0x9e, 0x8b, 0xd5, 0x86, 0xf1, 0x97, 0x8a, 0xef, 0x25, 0xbe, 0x05, 0xfb, 0xa5,
	0xe2, 0xe2, 0xa0, 0xc7, 0xed, 0xb1, 0x1a, 0x20, 0x82, 0xb5, 0x53, 0x4d, 0x1a, 0x9a, 0xd4, 0x67,
	0xfc, 0x00, 0xbe, 0x5a, 0xdc, 0x62, 0x57, 0x3d, 0x2f, 0xb9, 0xd0, 0x13, 0xb7, 0x99, 0xde, 0x65,
	0xa2, 0x19, 0xbc, 0x82, 0xae, 0xe0, 0xfb, 0xea, 0x49, 0x2e, 0x4a, 0x2e, 0x16, 0x4a, 0xd0, 0xc3,
	0xb7, 0x59, 0x50, 0xd3, 0x33, 0x2e, 0x66, 0xf9, 0x03, 0xc7, 0x31, 0x40, 0xf1, 0xba, 0x6c, 0x6a,
	0xf7, 0xcc, 0x81, 0x7f, 0xfd, 0x69, 0xa8, 0x1e, 0xc2, 0xf0, 0xac, 0xb6, 0xe1, 0xe9, 0x49, 0x44,
	0x3b, 0x29, 0x0e, 0xac, 0x71, 0xed, 0x32, 0x85, 0xee, 0x7f, 0x32, 0x12, 0x30, 0x1f, 0x79, 0xdd,
	0x88, 0xcd, 0xd4, 0x11, 0xaf, 0xc0, 0xfe, 0x95, 0x3f, 0x55, 0x75, 0x1f, 0xfe, 0x35, 0xa9, 0x93,
	0x9c, 0xee, 0xb1, 0x5a, 0xfe, 0x6a, 0x7c, 0x69, 0xf5, 0x57, 0xe0, 0x8c, 0x0b, 0x51, 0x56, 0x7b,
	0x0c, 0xc0, 0x9b, 0x27, 0xf1, 0x5d, 0xc4, 0xb2, 0xd1, 0x94, 0xbc, 0xc1, 0x0b, 0x30, 0xef, 0xa3,
	0x6f, 0xa4, 0x85, 0x00, 0x4e, 0xfc, 0x7d, 0x74, 0x13, 0x65, 0xc4, 0x40, 0x0f, 0xec, 0x69, 0x3a,
	0x1e, 0x4d, 0x89, 0x89, 0x2e, 0x58, 0x49, 0x74, 0x9f, 0x11, 0x0b, 0xdb, 0xe0, 0xce, 0x58, 0x1a,
	0xce, 0xc7, 0xb7, 0x19, 0xb1, 0x55, 0xc8, 0x5d, 0x1c, 0x46, 0x29, 0x71, 0x94, 0xc5, 0x2c, 0x1e,
	0x93, 0x8f, 0x13, 0xcb, 0xf5, 0x49, 0x7b, 0x62, 0xb9, 0x6d, 0x12, 0x4c, 0x2c, 0x37, 0x20, 0x9d,
	0x89, 0xe5, 0x76, 0x48, 0x97, 0x59, 0x9b, 0xed, 0x66, 0xcb, 0xcc, 0x65, 0x2e, 0x96, 0x8e, 0xfe,
	0x18, 0x9f, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x86, 0x36, 0x9b, 0x26, 0x03, 0x00, 0x00,
}
