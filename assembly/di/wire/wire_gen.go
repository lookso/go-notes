// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package wire

// Injectors from wire.go:

// InitGreeteEvent1 使用 wire 生成初始化代码
func InitGreeteEvent1() Event {
	message := NewMessage()
	greeter := NewGreeter(message)
	event := NewEvent(greeter)
	return event
}

// InitGreeteEvent2 使用 wire 生成初始化代码，并返回产生的错误
func InitGreeteEvent2() (Event, error) {
	message := NewMessage()
	greeter := NewGreeter2(message)
	event, err := NewEvent2(greeter)
	if err != nil {
		return Event{}, err
	}
	return event, nil
}

// InitGreeteEvent3 使用 wire 生成初始化代码，带参数
func InitGreeteEvent3(phrase string) (Event, error) {
	message := NewMessage2(phrase)
	greeter := NewGreeter2(message)
	event, err := NewEvent2(greeter)
	if err != nil {
		return Event{}, err
	}
	return event, nil
}

func InitGreeteEvent4() (Event, error) {
	message := NewMessage()
	greeter := NewGreeter2(message)
	event, err := NewEvent2(greeter)
	if err != nil {
		return Event{}, err
	}
	return event, nil
}

func InitGreeteEvent5() (Event, error) {
	message := NewMessage()
	greeter := NewGreeter2(message)
	event, err := NewEvent2(greeter)
	if err != nil {
		return Event{}, err
	}
	return event, nil
}

// user InitializeUserService 初始化
func InitializeUserService() *UserService {
	userRepoImpl := NewMockUserRepo()
	userService := NewUserService(userRepoImpl)
	return userService
}

func InitializeFooBar() Person {
	age := ProvideAge()
	name := ProvideName()
	person := Person{
		Age:  age,
		Name: name,
	}
	return person
}

// error
func InitService() (Service, error) {
	service, err := NewService()
	if err != nil {
		return Service{}, err
	}
	return service, nil
}

func InitServiceClean() (Service, func(), error) {
	service, cleanup, err := NewServiceClean()
	if err != nil {
		return Service{}, nil, err
	}
	return service, func() {
		cleanup()
	}, nil
}

// player
func InitMission(playerName, monsterName string) Mission {
	player := NewPlayer(playerName)
	monster := NewMonster(monsterName)
	mission := NewMission(player, monster)
	return mission
}
